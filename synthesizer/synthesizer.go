package synthesizer

import "math"

type Synthesizer struct {
	N        int
	Dt       float64
	omega    []float64
	phi      []float64
	envelope func(float64) float64
}

func New(dt float64, n int, omega, phi []float64, envelope func(float64) float64) *Synthesizer {
	p := new(Synthesizer)
	p.Dt = dt
	p.N = n
	p.omega = omega
	p.phi = phi
	p.envelope = envelope
	return p
}

func (s *Synthesizer) Synthesize(a []float64) []float64 {
	t := 0.0
	y := make([]float64, s.N)
	m := len(s.omega)
	for j := range s.N {
		for i := range m {
			y[j] += a[i] * math.Sin(s.omega[i]*t+s.phi[i])
		}
		y[j] = s.envelope(t) * y[j]
		t += s.Dt
	}
	return y
}

func DefaultPeriod() []float64 {
	return []float64{
		10.0000000,
		7.1551724,
		5.5704698,
		4.5604396,
		3.8604651,
		3.3467742,
		2.9537367,
		2.6433121,
		2.3919308,
		2.1842105,
		2.0096852,
		1.8609865,
		1.7327766,
		1.6210937,
		1.5229358,
		1.4359862,
		1.3584288,
		1.2888199,
		1.2259970,
		1.1690141,
		1.1170929,
		1.0695876,
		1.0259580,
		0.9857482,
		0.9485714,
		0.9140969,
		0.8820404,
		0.8521561,
		0.8242304,
		0.7980769,
		0.7735322,
		0.7504521,
		0.7287094,
		0.7081911,
		0.6887967,
		0.6704362,
		0.6530291,
		0.6365031,
		0.6207928,
		0.6058394,
		0.5915895,
		0.5779944,
		0.5650102,
		0.5525965,
		0.5407166,
		0.5293367,
		0.5184260,
		0.5079559,
		0.4979004,
		0.4882353,
		0.4789383,
		0.4699887,
		0.4613674,
		0.4530568,
		0.4450402,
		0.4373024,
		0.4298291,
		0.4226069,
		0.4156234,
		0.4088670,
		0.4023267,
		0.3959924,
		0.3898544,
		0.3839038,
		0.3781321,
		0.3725314,
		0.3670942,
		0.3618134,
		0.3566824,
		0.3516949,
		0.3468450,
		0.3421270,
		0.3375356,
		0.3330658,
		0.3287129,
		0.3244722,
		0.3203396,
		0.3163110,
		0.3123824,
		0.3085502,
		0.3048109,
		0.3011611,
		0.2975977,
		0.2941176,
		0.2907180,
		0.2873961,
		0.2841493,
		0.2809749,
		0.2778708,
		0.2748344,
		0.2718637,
		0.2689566,
		0.2661109,
		0.2633249,
		0.2605965,
		0.2579242,
		0.2553061,
		0.2527406,
		0.2502261,
		0.2477612,
		0.2453444,
		0.2429742,
		0.2406495,
		0.2383688,
		0.2361309,
		0.2339346,
		0.2317788,
		0.2296624,
		0.2275843,
		0.2255435,
		0.2235389,
		0.2215697,
		0.2196348,
		0.2177335,
		0.2158648,
		0.2140278,
		0.2122219,
		0.2104462,
		0.2087000,
		0.2069825,
		0.2052931,
		0.2036310,
		0.2019956,
		0.2003863,
		0.1988024,
		0.1972433,
		0.1957086,
		0.1941975,
		0.1927095,
		0.1912442,
		0.1898011,
		0.1883795,
		0.1869790,
		0.1855993,
		0.1842397,
		0.1829000,
		0.1815795,
		0.1802780,
		0.1789950,
		0.1777302,
		0.1764831,
		0.1752534,
		0.1740407,
		0.1728446,
		0.1716649,
		0.1705012,
		0.1693532,
		0.1682205,
		0.1671029,
		0.1660000,
		0.1649116,
		0.1638373,
		0.1627770,
		0.1617303,
		0.1606970,
		0.1596768,
		0.1586695,
		0.1576748,
		0.1566925,
		0.1557223,
		0.1547641,
		0.1538176,
		0.1528827,
		0.1519590,
		0.1510464,
		0.1501447,
		0.1492537,
		0.1483733,
		0.1475031,
		0.1466431,
		0.1457931,
		0.1449528,
		0.1441222,
		0.1433011,
		0.1424893,
		0.1416866,
		0.1408929,
		0.1401080,
		0.1393319,
		0.1385643,
		0.1378051,
		0.1370542,
		0.1363114,
		0.1355766,
		0.1348497,
		0.1341306,
		0.1334191,
		0.1327151,
		0.1320185,
		0.1313291,
		0.1306469,
		0.1299718,
		0.1293036,
		0.1286423,
		0.1279877,
		0.1273397,
		0.1266982,
		0.1260632,
		0.1254345,
		0.1248120,
		0.1241957,
		0.1235855,
		0.1229812,
		0.1223828,
		0.1217902,
		0.1212033,
		0.1206220,
		0.1200463,
		0.1194760,
		0.1189112,
		0.1183516,
		0.1177973,
		0.1172482,
		0.1167042,
		0.1161652,
		0.1156311,
		0.1151019,
		0.1145776,
		0.1140580,
		0.1135431,
		0.1130328,
		0.1125271,
		0.1120259,
		0.1115292,
		0.1110368,
		0.1105487,
		0.1100650,
		0.1095854,
		0.1091100,
		0.1086387,
		0.1081715,
		0.1077083,
		0.1072490,
		0.1067936,
		0.1063421,
		0.1058944,
		0.1054504,
		0.1050101,
		0.1045735,
		0.1041405,
		0.1037111,
		0.1032852,
		0.1028628,
		0.1024438,
		0.1020283,
		0.1016161,
		0.1012072,
		0.1008016,
		0.1003992,
		0.1000000,
	}
}
